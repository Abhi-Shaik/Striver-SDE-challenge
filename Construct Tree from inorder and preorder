#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
TreeNode<int>* builder(vector<int>&inorder,vector<int>&preorder,int is,int ie,int ps,int pe){
    if(is>ie)
        return NULL;
    int idx=-1;
    int val=preorder[ps];
    for(int i=is;i<=ie;i++){
        if(inorder[i]==val){
            idx=i;
            break;
        }
    }
    TreeNode<int>*root=new TreeNode<int>(val);
    int len=idx-is;
    root->left=builder(inorder,preorder,is,idx-1,ps+1,ps+len);
    root->right=builder(inorder,preorder,idx+1,ie,ps+len+1,pe);
    return root;
}
TreeNode<int> *buildBinaryTree(vector<int> &inorder, vector<int> &preorder)
{
	//    Write your code here
    int n=inorder.size();
    return builder(inorder,preorder,0,n-1,0,n-1);
}
