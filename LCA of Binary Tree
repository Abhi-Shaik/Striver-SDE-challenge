/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int solve(TreeNode* root,int &ans){
        if(!root)
            return -1e9;
        if(!root->left && !root->right){
            ans=max(ans,root->val);
            return root->val;
        }
        int lm=max(0,solve(root->left,ans));
        int rm=max(0,solve(root->right,ans));
        ans=max(ans,lm+rm+root->val);
        return root->val+max(lm,rm);
    }
    int maxPathSum(TreeNode* root) {
        int ans=INT_MIN;
        solve(root,ans);
        return ans;
    }
};
