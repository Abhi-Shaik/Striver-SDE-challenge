/************************************************************
   
   Following is the TreeNode class structure
   
   class TreeNode<T>
   { 
   public:
        T data; 
        TreeNode<T> *left;
        TreeNode<T> *right;
   
        TreeNode(T data) 
  		{ 
            this -> data = data; 
            left = NULL; 
            right = NULL; 
        }
   };
   
   
 ************************************************************/
TreeNode<int>* builder(vector<int>&inorder,vector<int>&postorder,int is,int ie,int ps,int pe){
     if(is>ie)
          return NULL;
     int idx=-1;
     for(int i=is;i<=ie;i++){
          if(postorder[pe]==inorder[i]){
               idx=i;
               break;
          }
     }
     int len=idx-is;
     TreeNode<int>*root=new TreeNode<int>(postorder[pe]);
     root->left=builder(inorder,postorder,is,idx-1,ps,ps+len-1);
     root->right=builder(inorder,postorder,idx+1,ie,ps+len,pe-1);
     return root;
}
TreeNode<int>* getTreeFromPostorderAndInorder(vector<int>& postOrder, vector<int>& inOrder) 
{
	// Write your code here.
     int n=inOrder.size();
     return builder(inOrder,postOrder,0,n-1,0,n-1);
}
