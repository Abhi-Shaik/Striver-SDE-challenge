#include <bits/stdc++.h> 
int solve(vector<int>&rank,int idx,int prev,int n,vector<vector<int>>&dp){
	if(idx==n)
		return 0;
	if(dp[idx][prev+1]!=-1)
		return dp[idx][prev+1];
	int take=0;
	if(prev==-1 || rank[idx]>rank[prev]){
		take=rank[idx]+solve(rank,idx+1,idx,n,dp);
	}
	int not_take=solve(rank,idx+1,prev,n,dp);
	return dp[idx][prev+1]=max(take,not_take);
}
int maxIncreasingDumbbellsSum(vector<int> &rack, int n)
{
	// Write your code here
	vector<vector<int>>dp(n,vector<int>(n+1,-1));
	return solve(rack,0,-1,n,dp);
}
