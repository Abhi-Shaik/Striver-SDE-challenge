#include <bits/stdc++.h> 
/**********************************************************

    Following is the Binary Tree Node structure:

    template <typename T>
    class BinaryTreeNode {
        public: 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
                delete left;
            if (right)
                delete right;
        }
    };
***********************************************************/
bool solve(BinaryTreeNode<int>*root,int k,unordered_map<int,int>&m){
    if(!root)
        return false;
    if(m.find(k-root->data)!=m.end())
        return true;
    m[root->data]=1;
    return solve(root->left,k,m) | solve(root->right,k,m);
}
bool pairSumBst(BinaryTreeNode<int> *root, int k)
{
    // Write your code here
    unordered_map<int,int>m;
    return solve(root,k,m);
}
